<#@ template language="C#" hostspecific="True" #>
<#@ output extension="txt" #>

<#@ include file="Settings.ttinclude" #>
<#@ include file="MultipleFileManager.ttinclude" #>

<#  
	var manager = Manager.Create(Host, GenerationEnvironment);

	var header = new StringBuilder().AppendFormat(@"
/***************************************************************************************
		WARNING: AUTOGENERATED
		
		T4 templates adopted from PetaPoco.
		Connection String:      {0}

***************************************************************************************/", 
		new System.Text.RegularExpressions.Regex("password=.*;", System.Text.RegularExpressions.RegexOptions.Singleline|System.Text.RegularExpressions.RegexOptions.Multiline|System.Text.RegularExpressions.RegexOptions.IgnoreCase).Replace(ConnectionString, "password=*****;"));

		var tables = new Emigrace.Core.Database.Generator.Tables();
		try {
			tables = Emigrace.Core.Database.Generator.Tables.Load(ConnectionString, SchemaName, IncludeViews);
		}
		catch (Exception ex){
			var error = ex.Message.Replace("\r\n", "\n").Replace("\n", " ");
			Warning(string.Format("Failed to load objects from the database - {0}", error));
			WriteLine("");
			WriteLine("// -----------------------------------------------------------------------------------------");
			WriteLine("// Unexpected error - {0}", error);
			WriteLine("// -----------------------------------------------------------------------------------------");
			WriteLine("");
		}

WriteLine("Multiple file generation is based on an awesome T4 template manager from Damien Guard.");
WriteLine("See more at http://damieng.com/blog/2009/11/06/multiple-outputs-from-t4-made-easy-revisited");	
WriteLine("");
WriteLine("Unfortunately, SingleFileGenerator insists on creating the original 'Database.[ext]' file");
WriteLine("so the best thing one can do here is to give it a 'txt' extension and errors there, if they pop up!");
WriteLine("");
#>

<# manager.StartHeader(); #>
<# header.ToString(); #>
<# manager.EndBlock(); #>
	
<# manager.StartNewFile("Database.Tables.cs"); #>
<#@ include file="Tables.ttinclude" #>
<# manager.EndBlock(); #>

<# manager.Process(true); #>
